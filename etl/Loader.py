import logging
from etl.DBUtil import Connectionpool


class Loader:
    """
        Class to Load CSV files generated by etl.Transformer.Transformer into Postgres using Postgres COPY with
        cursor.copy_from()
    """

    def __init__(self) -> None:
        self.cp = Connectionpool()

    def load_data_to_postgres(self):
        self.__populate_article_performance(). \
            __populate_user_performance()

    def __populate_article_performance(self):
        with open('results/fact_article_access.csv', 'r') as f:
            conn = self.cp.get_connection()
            cursor = conn.cursor()
            cursor.copy_from(f, 'ARTICLE_PERFORMANCE', sep='{')
            conn.commit()
            cursor.close()
            self.cp.close_connection(conn)
        print("Data loaded successfully into ARTICLE_PERFORMANCE table")
        return self

    def __populate_user_performance(self):
        with open('results/fact_user_activity.csv', 'r') as f:
            conn = self.cp.get_connection()
            cursor = conn.cursor()
            cursor.copy_from(f, 'USER_PERFORMANCE', sep=',')
            conn.commit()
            cursor.close()
            self.cp.close_connection(conn)
        print("Data loaded successfully into USER_PERFORMANCE table")
        return self
